directive @goModel(model: String, models: [String!]) on OBJECT 
    | INPUT_OBJECT 
    | SCALAR 
    | ENUM 
    | INTERFACE 
    | UNION

directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION 
    | FIELD_DEFINITION

type Query {
  totalPhotos: Int!
  allPhotos: [Photo!]
}

type Mutation {
  postPhoto(input: PostPhotoInput!): Photo!
}

type Photo @goModel(model: "github.com/ryutah/go-graphql-photo-share-api/domain/model.Photo") {
  id: PhotoID!
  url: String! @goField(name: "FullURL")
  name: String!
  description: String!
  category: PhotoCategory!
}

scalar PhotoID @goModel(model: "github.com/ryutah/go-graphql-photo-share-api/domain/model.PhotoID")

input PostPhotoInput {
  name: String!
  category: PhotoCategory=PORTRAIT
  description: String
}

enum PhotoCategory {
  SELFIE
  PORTRAIT
  ACTION
  LANDSCAPE
  GRAPHIC
}
